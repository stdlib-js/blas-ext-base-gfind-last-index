{
  "version": 3,
  "sources": ["../lib/ndarray.js", "../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar gfindIndex = require( '@stdlib/blas-ext-base-gfind-index' ).ndarray;\n\n\n// MAIN //\n\n/**\n* Returns the index of the last element which passes a test implemented by a predicate function.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {Collection} x - input array\n* @param {integer} strideX - stride length\n* @param {NonNegativeInteger} offsetX - starting index\n* @param {Callback} clbk - callback function\n* @param {*} [thisArg] - execution context\n* @returns {integer} index\n*\n* @example\n* function isEven( v ) {\n*     return v % 2.0 === 0.0;\n* }\n*\n* var x = [ 1.0, 3.0, -5.0, 4.0, 3.0, -2.0, -3.0 ];\n*\n* var idx = gfindLastIndex( x.length, x, 1, 0, isEven );\n* // returns 5\n*/\nfunction gfindLastIndex( N, x, strideX, offsetX, clbk, thisArg ) {\n\tvar idx;\n\n\tif ( N <= 0 ) {\n\t\treturn -1;\n\t}\n\t// Reverse the iteration order by flipping the stride and adjusting the offset:\n\toffsetX += ( N-1 ) * strideX;\n\tstrideX *= -1;\n\n\t// Find the index of the search element in the reversed \"view\":\n\tidx = gfindIndex( N, x, strideX, offsetX, clbk, thisArg );\n\tif ( idx < 0 ) {\n\t\treturn idx;\n\t}\n\t// Convert the index from the reversed \"view\" to an index in the original \"view\":\n\tidx = N - 1 - idx;\n\treturn idx;\n}\n\n\n// EXPORTS //\n\nmodule.exports = gfindLastIndex;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar stride2offset = require( '@stdlib/strided-base-stride2offset' );\nvar ndarray = require( './ndarray.js' );\n\n\n// MAIN //\n\n/**\n* Returns the index of the last element which passes a test implemented by a predicate function.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {Collection} x - input array\n* @param {integer} strideX - stride length\n* @param {Callback} clbk - callback function\n* @param {*} [thisArg] - execution context\n* @returns {integer} index\n*\n* @example\n* function isEven( v ) {\n*     return v % 2.0 === 0.0;\n* }\n*\n* var x = [ 1.0, 3.0, -5.0, 4.0, 3.0, -2.0, -3.0 ];\n*\n* var idx = gfindLastIndex( x.length, x, 1, isEven );\n* // returns 5\n*/\nfunction gfindLastIndex( N, x, strideX, clbk, thisArg ) {\n\treturn ndarray( N, x, strideX, stride2offset( N, strideX ), clbk, thisArg );\n}\n\n\n// EXPORTS //\n\nmodule.exports = gfindLastIndex;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the index of the last element which passes a test implemented by a predicate function.\n*\n* @module @stdlib/blas-ext-base-gfind-last-index\n*\n* @example\n* var gfindLastIndex = require( '@stdlib/blas-ext-base-gfind-last-index' );\n*\n* function isEven( v ) {\n*     return v % 2.0 === 0.0;\n* }\n*\n* var x = [ 1.0, 3.0, -5.0, 4.0, 3.0, -2.0, -3.0 ];\n*\n* var idx = gfindLastIndex( x.length, x, 1, isEven );\n* // returns 5\n*\n* @example\n* var gfindLastIndex = require( '@stdlib/blas-ext-base-gfind-last-index' );\n*\n* function isEven( v ) {\n*     return v % 2.0 === 0.0;\n* }\n*\n* var x = [ 1.0, 3.0, -5.0, 4.0, 3.0, -2.0, -3.0 ];\n*\n* var idx = gfindLastIndex.ndarray( x.length, x, 1, 0, isEven );\n* // returns 5\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar ndarray = require( './ndarray.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAa,QAAS,mCAAoC,EAAE,QA0BhE,SAASC,EAAgBC,EAAGC,EAAGC,EAASC,EAASC,EAAMC,EAAU,CAChE,IAAIC,EAEJ,OAAKN,GAAK,EACF,IAGRG,IAAaH,EAAE,GAAME,EACrBA,GAAW,GAGXI,EAAMR,EAAYE,EAAGC,EAAGC,EAASC,EAASC,EAAMC,CAAQ,EACnDC,EAAM,IAIXA,EAAMN,EAAI,EAAIM,GACPA,EACR,CAKAT,EAAO,QAAUE,ICvEjB,IAAAQ,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAgB,QAAS,oCAAqC,EAC9DC,EAAU,IAyBd,SAASC,EAAgBC,EAAGC,EAAGC,EAASC,EAAMC,EAAU,CACvD,OAAON,EAASE,EAAGC,EAAGC,EAASL,EAAeG,EAAGE,CAAQ,EAAGC,EAAMC,CAAQ,CAC3E,CAKAR,EAAO,QAAUG,ICHjB,IAAIM,EAAc,QAAS,uDAAwD,EAC/EC,EAAO,IACPC,EAAU,IAKdF,EAAaC,EAAM,UAAWC,CAAQ,EAKtC,OAAO,QAAUD",
  "names": ["require_ndarray", "__commonJSMin", "exports", "module", "gfindIndex", "gfindLastIndex", "N", "x", "strideX", "offsetX", "clbk", "thisArg", "idx", "require_main", "__commonJSMin", "exports", "module", "stride2offset", "ndarray", "gfindLastIndex", "N", "x", "strideX", "clbk", "thisArg", "setReadOnly", "main", "ndarray"]
}
